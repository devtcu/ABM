body {
    font-family: Arial, Helvetica, sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    background: linear-gradient(135deg, #1a1a2e 0%, #00b4d8 100%);
    margin: 0;
    padding: 2vw;
    color: #e0e0e0;
    min-height: 100vh;
}

h1, #status, .param label, .param span, .pause-label {
    color: #e0e0e0;
}

h1 {
    font-size: clamp(1.5rem, 4vw, 2rem);
    text-align: center;

}

#status {
    margin: 1rem 0;
    font-weight: bold;
    font-size: clamp(0.9rem, 2.5vw, 1.2rem);
    text-align: center;
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 1.2rem;
    height: 1.2rem;
    border-radius: 50%;
    background: #007bff;
    border: 2px solid #fff;
    box-shadow: 0 0 2px #333;
    cursor: pointer;
    transition: background 0.3s;
}

input[type="range"]::-webkit-slider-thumb:active {
    opacity: 0.85;
}

.grid-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(1rem, 1fr));
    gap: 0.1rem;
    background-color: #fff;
    padding: 0.5rem;
    border: 2px solid #333;
    border-radius: 50px;
    max-width: 90vw;
    box-sizing: border-box;
    justify-content: center;
    align-items: center;
}

.cell {
    width: 100%;
    aspect-ratio: 1 / 1;
    clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
}

.cell.h { background-color: green; }
.cell.e { background-color: yellow; }
.cell.i { background-color: red; }
.cell.f { background-color: purple; }
.cell.d { background-color: black; }
.cell.o { background-color: white; }

.cell:hover {
    opacity: 0.7;
    cursor: pointer;
}

.controls {
    margin: 1rem 0;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
   
}

.control-button {
    padding: 0.5rem 1rem;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 25px;
    cursor: pointer;
    transition: opacity 500ms, color 500ms, box-shadow 300ms;
    font-size: clamp(0.8rem, 2vw, 1rem);
}

.control-button:hover {
    background-color: #0056b3;
    color: white;
    box-shadow: -3px 1px 3px rgba(98, 95, 95, 0.7);
}

.params {
    background-color: rgba(255, 255, 255, 0.1);
    padding: 1rem;
    border-radius: 25px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    width: min(90%, 600px);
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-left: auto;
    margin-right: auto;
   
}

.param {
    margin: 0.5rem 0;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.9rem;
    justify-content: center;
    text-align: center;
    
}

.param label {
    width: min(120px, 30%);
    font-weight: bold;
    font-size: clamp(0.8rem, 2vw, 1rem);
}

.param input[type="range"] {
    flex: 1;
    min-width: 100px;
    max-width: 200px;
}

.param span {
    margin-left: 0.5rem;
    font-size: clamp(0.8rem, 2vw, 1rem);
}

.toggle-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.3rem;
}

.toggle-container input[type="checkbox"] {
    display: none;
}

.toggle-container label {
    width: 3rem;
    height: 1.5rem;
    background-color: #ccc;
    border-radius: 0.75rem;
    position: relative;
    cursor: pointer;
    transition: background-color 0.3s;
}

.toggle-container label::before {
    content: '';
    position: absolute;
    width: 1.3rem;
    height: 1.3rem;
    background-color: white;
    border-radius: 50%;
    top: 0.1rem;
    left: 0.1rem;
    transition: transform 0.3s;
}

.toggle-container input:checked + label {
    background-color: #007bff;
}

.toggle-container input:checked + label::before {
    transform: translateX(1.5rem);
}

.intro-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #1a1a2e 0%, #00b4d8 100%);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    transition: opacity 0.5s ease;
}

.intro-overlay.hidden {
    opacity: 0;
    pointer-events: none;
    display: none;
}

.hex-grid {
    display: grid;
    grid-template-columns: repeat(10, minmax(20px, 3vw));
    gap: 0.3rem;
}

.hex {
    width: 100%;
    aspect-ratio: 1 / 1;
    background-color: #e0e0e0;
    clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
    animation: scatter 2s ease-out forwards;
    animation-delay: calc(0.05s * var(--i));
}

@keyframes scatter {
    0% {
        transform: scale(1) translate(0, 0);
        opacity: 1;
    }
    100% {
        transform: scale(0.5) translate(calc(var(--dx) * 10vw), calc(var(--dy) * 10vw));
        opacity: 0;
    }
}

.simulation-container {
    position: relative;
    z-index: 1;
    opacity: 0;
    transition: opacity 0.5s ease 2.5s;
    width: 100%;
    max-width: 90vw;
}

.simulation-container.visible {
    opacity: 1;
}

@media (max-width: 600px) {
    .grid-container {
        grid-template-columns: repeat(auto-fit, minmax(0.8rem, 1fr));
    }
    .param {
        flex-direction: column;
        align-items: flex-start;
    }
    .param label {
        width: 100%;
    }
    .param input[type="range"] {
        width: 100%;
        max-width: none;
    }
    .controls {
        flex-direction: column;
        align-items: center;
    }
    .toggle-container {
        margin-left: 0;
    }
}